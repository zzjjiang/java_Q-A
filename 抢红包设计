简单设计：
redis+lua。红包池list+抢红包用户hash。是否有红包？用户是否抢过？

中级设计：
1.拆红包：预拆包和实时拆包。
2.高并发读：缓存。
3.并发写：串行化和乐观锁。
4.网络流量峰值：大量用户同时抢红包是否会造成网络拥塞，发红包和抢红包最好在同一个IDC。
5.对账：考虑到拆红包凭证和入账是异步的2套系统，以及出现故障的可能，需要定时对账保证数据的一致性。
6.降级：在cache故障时有限流的使用DB进行服务，在资源紧张的时候关闭掉非核心流程，在实时入账请求量过大时，延迟批量入账。
7.故障恢复。
